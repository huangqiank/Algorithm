
class Treenode:
    def __init__(self,x):
        self.value = x
        self.left = None
        self.right = None
    def pre_order(self):
        res=[]
        self.help(res)
        return res
    def help (self,res):
        if self is None:
            return
        res.append(self.value)
        help (self.left,res)
        help (self.right,res)
  
        
    

def print_same_level(node):
    if node is None:
        return node.value
    this_level = [node]
    res=[node.value]
    while this_level != None:
        n= len(this_level)
        i = 0
        while i < n:
            i+=1
            node = this_level.pop()
            if node.left != None:
                this_level.append(node.left)
            if node.right != None:
                this_level.append(node.right)
        for j in this_level:
            res.append(j.value)
    return res

node1 = Treenode(3)
node2 = Treenode(2)
node3 = Treenode(4)
node4 = Treenode(-1)
node5 = Treenode(3)
node6 = Treenode(0)
node1.left = node2
node1.right = node3
node2.left= node4
node4.left = node6
node3.left = node5
print print_same_level(node1)
                
        

         
            
    
    
        