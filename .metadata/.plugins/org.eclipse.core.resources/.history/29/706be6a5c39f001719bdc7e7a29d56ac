'''
Created on Sep 10, 2017

@author: qiankunhuang
'''
class listnode:
    def __init__(self,value):        
        self.next = None
        self.value = value
class queue:
    def __init__(self):
        self.size = 0
        self.tail = None
        self.head = None
    def enqueue(self,value):
        node=listnode(value)
        if self.tail is None:
            self.tail = node
            self.head = node
        else:
            self.tail.next = node
            self.tail = node
        self.size +=1
    def dequeue(self):
        if self.size is None:
            return False
        else:
            a = self.head.value
            self.head = self.head.next
        self.size -= 1
        return a
    def value(self):
        return self.value
class stack:
    def __init__(self):
        self.size = 0
        self.tail = None
    def push(self,value):
        node=listnode(value)
        if self.tail == None:
            self.tail = node
        else:
            node.next = self.tail
            self.tail = node
        self.size +=1
    def pop(self):
        if self.size == 0:
            return False
        else:
            a = self.tail.value
            self.tail= self.tail.next
        self.size -= 1
        return a
    def value(self):
        return self.value
    
def is_Palindrom(input):
    new_stack = stack()
    cur_head = input.head
    while  cur_head != None :
        new_stack.push(cur_head.value)
        cur_head = cur_head.next
    while  new_stack.tail != None:
        if new_stack.pop()  != input.dequeue():            
            return False
    return True
       
node1 = listnode(0)
node2 = listnode(2)
node3 = listnode(2)
node4 = listnode(0)
node1.next = node2
node2.next = node3
node3.next = node4
q1=queue()
q1.tail = node4
q1.head = node1

print is_Palindrom(q1)
                 
     
        
        
    