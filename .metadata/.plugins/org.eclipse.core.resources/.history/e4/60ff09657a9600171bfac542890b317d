'''
Created on Sep 9, 2017

@author: qiankunhuang
'''
class listnode:
    def __init__(self,value):        
        self.next = None
        self.value = value
class queue:
    def __init__(self):
        self.size = 0
        self.tail = None
        self.head = None
    def enqueu(self,value):
        node=listnode(value)
        if self.tail == None:
            self.tail = node
            self.head = node
        else:
            self.tail.next = node
            self.tail = node
        self.size +=1
    def dequeue(self):
        if self.size == 0:
            return False
        else:
            a = self.head.value
            self.head = self.head.next
        self.size -= 1
        return a
    def value(self):
        return self.value
def merge(head1,head2):
    new_head=listnode(0)
    cur_head=new_head
    while head1 != None and head2 != None:       
        if head1.value < head2.value:   
            cur_head.next = head1
            cur_head = head1.value
            head1=head1.next
        else:
            cur_head.next = head2
            cur_head = head2.value
            head1=head2.next
    if head1 != None:
        cur_head.next = head1
    else:
        cur_head.next = head2
    return prit(new_head.next)
def prit(node):
    if node.next is None:
        return 
    else:
        node=node.next
        return node.value
    
node1 = listnode(0)
node2 = listnode(2)
node3 = listnode(4)
node1.next = node2
node2.next = node3
q1=queue()
q1.tail = node1
q1.head = node3
node4 = listnode(1)
node5 = listnode(3)
node6 = listnode(5)
node4.next = node5
node5.next = node6
q2=queue()
q2.tail = node4
q2.head = node6

print merge(node1,node4)


        

        
    
        
    